{
    "blocks": [
        {
            "name": "quantifier_ahead",
            "text": "Ahead",
            "category": "Directions",
            "definition": "{\"colour\": 65, \"tooltip\": \"TODO.\", \"type\": \"quantifier_ahead\", \"message0\": \"Ahead\", \"inputsInline\": true, \"nextStatement\": null, \"previousStatement\": null}",
            "generator": "return '\\'ahead\\')\\n'"
        },
        {
            "name": "quantifier_down",
            "text": "Down",
            "category": "Directions",
            "definition": "{\"colour\": 65, \"tooltip\": \"TODO.\", \"type\": \"quantifier_down\", \"message0\": \"Down\", \"inputsInline\": true, \"nextStatement\": null, \"previousStatement\": null}",
            "generator": "return '\\'down\\')\\n'"
        },
        {
            "name": "quantifier_left",
            "text": "Left",
            "category": "Directions",
            "definition": "{\"colour\": 260, \"tooltip\": \"TODO.\", \"output\": \"Direction\", \"type\": \"quantifier_left\", \"message0\": \"Left\", \"inputsInline\": true}",
            "generator": "return ['\\'left\\'', Blockly.NaoLang.ORDER_NONE];"
        },
        {
            "name": "quantifier_out",
            "text": "Out",
            "category": "Directions",
            "definition": "{\"colour\": 65, \"tooltip\": \"TODO.\", \"type\": \"quantifier_out\", \"message0\": \"Out\", \"inputsInline\": true, \"nextStatement\": null, \"previousStatement\": null}",
            "generator": "return '\\'out\\')\\n'"
        },
        {
            "name": "quantifier_right",
            "text": "Right",
            "category": "Directions",
            "definition": "{\"colour\": 260, \"tooltip\": \"TODO.\", \"output\": \"Direction\", \"type\": \"quantifier_right\", \"message0\": \"Right\", \"inputsInline\": true}",
            "generator": "return ['\\'right\\'', Blockly.NaoLang.ORDER_NONE];"
        },
        {
            "name": "quantifier_three",
            "text": "3",
            "category": "Numbers",
            "definition": "{\"colour\": 65, \"tooltip\": \"TODO.\", \"output\": \"Number\", \"type\": \"quantifier_three\", \"message0\": \"3\", \"inputsInline\": true}",
            "generator": "return ['3', Blockly.NaoLang.ORDER_NONE];"
        },
        {
            "name": "quantifier_two",
            "text": "2",
            "category": "Numbers",
            "definition": "{\"colour\": 65, \"tooltip\": \"TODO.\", \"output\": \"Number\", \"type\": \"quantifier_two\", \"message0\": \"2\", \"inputsInline\": true}",
            "generator": "return ['2', Blockly.NaoLang.ORDER_NONE];"
        },
        {
            "name": "quantifier_up",
            "text": "Up",
            "category": "Directions",
            "definition": "{\"colour\": 65, \"tooltip\": \"TODO.\", \"type\": \"quantifier_up\", \"message0\": \"Up\", \"inputsInline\": true, \"nextStatement\": null, \"previousStatement\": null}",
            "generator": "var code = 'up()\\n';return code;"
        },
        {
            "name": "robot_action_close_hand",
            "text": "Close hands",
            "category": "Robot Moves",
            "definition": "{\"colour\": 260, \"tooltip\": \"TODO.\", \"type\": \"robot_action_close_hand\", \"message0\": \"Close hands\", \"inputsInline\": true, \"nextStatement\": null, \"previousStatement\": null}",
            "generator": "return 'changeHand(\\'close\\',\\'both\\')\\n';"
        },
        {
            "name": "robot_action_look",
            "text": "Look",
            "category": "Robot Moves",
            "definition": "{\"colour\": 260, \"tooltip\": \"TODO.\", \"inputsInline\": false, \"message0\": \"Look %1\", \"args0\": [{\"type\": \"input_value\", \"name\": \"DIR\"}], \"type\": \"robot_action_look\", \"nextStatement\": null, \"previousStatement\": null}",
            "generator": "var dir = Blockly.NaoLang.valueToCode(block, 'DIR', Blockly.NaoLang.ORDER_NONE),code = 'look(' + dir + ')\\n';return code;"
        },
        {
            "name": "robot_action_open_hand",
            "text": "Open hands",
            "category": "Robot Moves",
            "definition": "{\"colour\": 260, \"tooltip\": \"TODO.\", \"type\": \"robot_action_open_hand\", \"message0\": \"Open hands\", \"inputsInline\": true, \"nextStatement\": null, \"previousStatement\": null}",
            "generator": "return 'changeHand(\\'open\\',\\'both\\')\\n';"
        },
        {
            "name": "robot_action_point_left",
            "text": "Point Left and",
            "category": "Robot Moves",
            "definition": "{\"colour\": 260, \"tooltip\": \"TODO.\", \"type\": \"robot_action_point_left\", \"message0\": \"Point Left and\", \"inputsInline\": true, \"nextStatement\": null, \"previousStatement\": null}",
            "generator": "return 'point(\\'left\\','"
        },
        {
            "name": "robot_action_point_right",
            "text": "Point Right and",
            "category": "Robot Moves",
            "definition": "{\"colour\": 260, \"tooltip\": \"TODO.\", \"type\": \"robot_action_point_right\", \"message0\": \"Point Right and\", \"inputsInline\": true, \"nextStatement\": null, \"previousStatement\": null}",
            "generator": "return 'point(\\'right\\','"
        },
        {
            "name": "robot_action_rest",
            "text": "Rest",
            "category": "Robot Moves",
            "definition": "{\"colour\": 260, \"tooltip\": \"TODO.\", \"type\": \"robot_action_rest\", \"message0\": \"Rest\", \"inputsInline\": true, \"nextStatement\": null, \"previousStatement\": null}",
            "generator": "var code = 'position(\\'Stand\\')\\n';return code;"
        },
        {
            "name": "robot_action_walk",
            "text": "Walk",
            "category": "Robot Moves",
            "definition": "{\"colour\": 260, \"tooltip\": \"TODO.\", \"type\": \"robot_action_walk\", \"message0\": \"Walk\", \"inputsInline\": true, \"nextStatement\": null, \"previousStatement\": null}",
            "generator": "var code ='walk(1,0) \\n'; return code"
        },
        {
            "name": "robot_action_wipe_forehead",
            "text": "Wipe forehead",
            "category": "Robot Moves",
            "definition": "{\"colour\": 260, \"tooltip\": \"TODO.\", \"type\": \"robot_action_wipe_forehead\", \"message0\": \"Wipe forehead\", \"inputsInline\": true, \"nextStatement\": null, \"previousStatement\": null}",
            "generator": "return 'wipe_forehead()\\n';"
        },
        {
            "name": "robot_arm_left_out",
            "text": "Point Left Arm",
            "category": "Ballet Movements",
            "definition": "{\"colour\": 20, \"tooltip\": \"Points left arm out.\", \"type\": \"robot_arm_left_out\", \"message0\": \"Point Left Arm\", \"inputsInline\": true, \"nextStatement\": null, \"previousStatement\": null}",
            "generator": "return 'leftArmOut()\\n';"
        },
        {
            "name": "robot_arm_right_out",
            "text": "Point Right Arm",
            "category": "Ballet Movements",
            "definition": "{\"colour\": 20, \"tooltip\": \"Points right arm out.\", \"type\": \"robot_arm_right_out\", \"message0\": \"Point Right Arm\", \"inputsInline\": true, \"nextStatement\": null, \"previousStatement\": null}",
            "generator": "return 'rightArmOut()\\n';"
        },
        {
            "name": "robot_ballet_arabasque",
            "text": "Arabasque Left",
            "category": "Ballet Movements",
            "definition": "{\"colour\": 20, \"tooltip\": \"TODO.\", \"type\": \"robot_ballet_arabasque\", \"message0\": \"Arabasque Left\", \"inputsInline\": true, \"nextStatement\": null, \"previousStatement\": null}",
            "generator": "var code = 'arabasque()\\n';return code;"
        },
        {
            "name": "robot_ballet_arabasque_right",
            "text": "Arabasque Right",
            "category": "Ballet Movements",
            "definition": "{\"colour\": 20, \"tooltip\": \"TODO.\", \"type\": \"robot_ballet_arabasque_right\", \"message0\": \"Arabasque Right\", \"inputsInline\": true, \"nextStatement\": null, \"previousStatement\": null}",
            "generator": "var code = 'arabasqueRight()\\n';return code;"
        },
        {
            "name": "robot_ballet_enavont",
            "text": "En Avont",
            "category": "Ballet Movements",
            "definition": "{\"colour\": 20, \"tooltip\": \"TODO.\", \"type\": \"robot_ballet_enavont\", \"message0\": \"En Avont\", \"inputsInline\": true, \"nextStatement\": null, \"previousStatement\": null}",
            "generator": "var code = 'enavont()\\n';return code;"
        },
        {
            "name": "robot_ballet_first_position",
            "text": "First Position",
            "category": "Ballet Movements",
            "definition": "{\"colour\": 20, \"tooltip\": \"TODO.\", \"type\": \"robot_ballet_first_position\", \"message0\": \"First Position\", \"inputsInline\": true, \"nextStatement\": null, \"previousStatement\": null}",
            "generator": "var code = 'ballet1()\\n';return code;"
        },
        {
            "name": "robot_ballet_fly",
            "text": "Fly",
            "category": "Ballet Movements",
            "definition": "{\"colour\": 20, \"tooltip\": \"TODO.\", \"type\": \"robot_ballet_fly\", \"message0\": \"Fly\", \"inputsInline\": true, \"nextStatement\": null, \"previousStatement\": null}",
            "generator": "var code = 'fly()\\n';return code;"
        },
        {
            "name": "robot_ballet_plie",
            "text": "Plie",
            "category": "Ballet Movements",
            "definition": "{\"colour\": 20, \"tooltip\": \"TODO.\", \"type\": \"robot_ballet_plie\", \"message0\": \"Plie\", \"inputsInline\": true, \"nextStatement\": null, \"previousStatement\": null}",
            "generator": "var code = 'plie()\\n';return code;"
        },
        {
            "name": "robot_ballet_second_position",
            "text": "Second Position",
            "category": "Ballet Movements",
            "definition": "{\"colour\": 20, \"tooltip\": \"TODO.\", \"type\": \"robot_ballet_second_position\", \"message0\": \"Second Position\", \"inputsInline\": true, \"nextStatement\": null, \"previousStatement\": null}",
            "generator": "var code = 'ballet2()\\n';return code;"
        },
        {
            "name": "robot_ballet_third_position",
            "text": "Third Position",
            "category": "Ballet Movements",
            "definition": "{\"colour\": 20, \"tooltip\": \"TODO.\", \"type\": \"robot_ballet_third_position\", \"message0\": \"Third Position\", \"inputsInline\": true, \"nextStatement\": null, \"previousStatement\": null}",
            "generator": "var code = 'ballet3()\\n';return code;"
        },
        {
            "name": "robot_dance_gangnam",
            "text": "Gangnum Dance",
            "category": "Robot Dances",
            "definition": "{\"message0\": \"Gangnam (music %1)\", \"args0\": [{\"type\": \"field_dropdown\", \"name\": \"MUSIC\", \"options\": [[\"on\", \"TRUE\"], [\"off\", \"FALSE\"]]}], \"colour\": 230, \"tooltip\": \"Performs the gangnam dance.\", \"type\": \"robot_dance_gangnam\", \"inputsInline\": true, \"nextStatement\": null, \"previousStatement\": null}",
            "generator": "var music = block.getFieldValue('MUSIC'),code = 'dance(\\'gangnam\\', ' + music + ')\\n';return Blockly.NaoLang.generatePrefix() + code;"
        },
        {
            "name": "robot_loop_start",
            "text": "Start Repeat",
            "category": "Control",
            "definition": "{\"colour\": 120, \"tooltip\": \"TODO.\", \"message0\": \"Repeat %1\", \"message1\": \"%1\", \"args0\": [{\"type\": \"input_value\", \"name\": \"TIMES\"}], \"args1\": [{\"type\": \"input_statement\", \"name\": \"DO\"}], \"type\": \"robot_loop_start\", \"inputsInline\": true, \"nextStatement\": null, \"previousStatement\": null}",
            "generator": "if (block.getField('TIMES')) {var repeats = String(parseInt(block.getFieldValue('TIMES'), 10));} else {var repeats = Blockly.NaoLang.valueToCode(block, 'TIMES', Blockly.NaoLang.ORDER_NONE) || '0';}Blockly.NaoLang.prefixLevel++;var branch = Blockly.NaoLang.statementToCode(block, 'DO'),code = 'loop(' + repeats + '){\\n' + branch;Blockly.NaoLang.prefixLevel--;return Blockly.NaoLang.generatePrefix() + code +Blockly.NaoLang.generatePrefix() + '}\\n';"
        },
        {
            "name": "robot_on_program_start",
            "text": "Start Program",
            "category": "Control",
            "definition": "{\"colour\": 120, \"tooltip\": \"TODO.\", \"message0\": \"On start\", \"message1\": \"%1\", \"args1\": [{\"type\": \"input_statement\", \"name\": \"ACTION\"}], \"type\": \"robot_on_program_start\", \"inputsInline\": true}",
            "generator": "var innerCode = Blockly.NaoLang.statementToCode(block, 'ACTION'),code = 'start{\\n' +innerCode +'}\\n';return code;"
        },
        {
            "name": "robot_posture_lie_on_back",
            "text": "Lie on Back",
            "category": "Robot Postures",
            "definition": "{\"colour\": 330, \"tooltip\": \"Moves to the Lie on Back position.\", \"type\": \"robot_posture_lie_on_back\", \"message0\": \"Lie on Back\", \"inputsInline\": true, \"nextStatement\": null, \"previousStatement\": null}",
            "generator": "var code = 'position(\\'LyingBack\\')\\n';return code;"
        },
        {
            "name": "robot_posture_sit_back",
            "text": "Sit Back",
            "category": "Robot Postures",
            "definition": "{\"colour\": 330, \"tooltip\": \"Moves to the Sit Back position.\", \"type\": \"robot_posture_sit_back\", \"message0\": \"Sit Back\", \"inputsInline\": true, \"nextStatement\": null, \"previousStatement\": null}",
            "generator": "var code = 'position(\\'SitRelax\\')\\n';return code;"
        },
        {
            "name": "robot_posture_sit_forwards",
            "text": "Sit Forwards",
            "category": "Robot Postures",
            "definition": "{\"colour\": 330, \"tooltip\": \"Moves to the Sit Forward position.\", \"type\": \"robot_posture_sit_forwards\", \"message0\": \"Sit Forwards\", \"inputsInline\": true, \"nextStatement\": null, \"previousStatement\": null}",
            "generator": "var code = 'position(\\'Sit\\')\\n';return code;"
        },
        {
            "name": "robot_posture_stand",
            "text": "Stand up",
            "category": "Robot Postures",
            "definition": "{\"colour\": 330, \"tooltip\": \"Moves to the Sit Forward position.\", \"type\": \"robot_posture_stand\", \"message0\": \"Stand up\", \"inputsInline\": true, \"nextStatement\": null, \"previousStatement\": null}",
            "generator": "var code = 'position(\\'Stand\\')\\n';return code;"
        }
    ],
    "nodes": [
        {
            "name": "append",
            "converter": "new BlockDefinition('text_concat', [new ValueDefinition('VAR'), new ValueDefinition('TEXT')])"
        }
    ]
}