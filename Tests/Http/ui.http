@baseURL = https://localhost:5001/api/v1

# @name login
POST {{baseURL}}/session HTTP/1.1
Content-Type: application/json; charset=utf-8

{
  "name": "admin",
  "password": "let-me-in"
}

###
@authToken = {{login.response.body.output.token}}

GET {{baseURL}}/ui HTTP/1.1
Content-Type: application/json; charset=utf-8

###

GET {{baseURL}}/ui/angular/language HTTP/1.1
Content-Type: application/json; charset=utf-8

###

DELETE {{baseURL}}/ui/angular HTTP/1.1
Content-Type: application/json; charset=utf-8
Authorization: Bearer {{authToken}}

###

DELETE {{baseURL}}/ui/tangibles HTTP/1.1
Content-Type: application/json; charset=utf-8
Authorization: Bearer {{authToken}}

###

POST {{baseURL}}/ui/tangibles HTTP/1.1
Content-Type: application/json; charset=utf-8
Authorization: Bearer {{authToken}}

{
  "blocks": [{
    "name": "dance","definition":"{\"number\":611,\"text\":\"Dance\",\"image\":\"iVBORw0KGgoAAAANSUhEUgAAAFoAAABLCAMAAADH/GAOAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAFoUExURdbW1gAAAMbGxnR0dE9PT0lJSUpKSlBQUIGBgdTU1Pr6+v7+/qCgoC8vLzQ0NDc3Nzg4ODIyMru7u9LS0nBwcFhYWGtra6+vr/j4+N7e3uHh4TY2NmZmZvDw8GxsbISEhI2Njdra2j8/P+/v7/b29kZGRrKysr29vaioqMjIyGhoaG9vb6ysrDw8PExMTMnJyebm5kBAQIaGhn5+fpqamlpaWo6Ojri4uJOTk2BgYJCQkNHR0fz8/Hl5eZ6enoyMjF1dXTo6Os7OzouLi4mJiXh4eIqKipKSknt7e3Jycnd3d8rKyuXl5UJCQoODg7CwsMLCwmRkZFNTU+Tk5F5eXpeXl7S0tF9fX/Ly8qampuPj4/T09KKiov39/ZGRkfv7++rq6vPz84iIiFRUVJiYmJWVlXx8fMzMzI+Pj9nZ2ezs7MDAwN/f36qqqpycnC4uLt3d3WpqamJiYlZWVsTExLa2tujo6AAAADmiZ9kAAAB4dFJOU///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////AHxXGIwAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAODaVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/Pg0KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS4zLWMwMTEgNjYuMTQ1NjYxLCAyMDEyLzAyLzA2LTE0OjU2OjI3ICAgICAgICAiPg0KICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPg0KICAgIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiIHhtbG5zOnhtcE1NPSJo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\"}","generator":"return 'gangnun()';",
  },{
    "name": "sayHello","definition":"{\"number\":1189,\"text\":\"Say Hello\",\"image\":\"iVBORw0KGgoAAAANSUhEUgAAAFoAAABLCAMAAADH/GAOAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAFrUExURdbW1gAAAPz8/NHR0aGhoX5+fmFhYUxMTERERDg4OKCgoM7Ozvr6+v39/crKyoCAgEJCQra2tlhYWFpaWvn5+YqKijk5OUdHR2hoaHR0dHp6ent7e4mJiebm5l1dXYSEhIyMjNvb20pKSkhISHJyctnZ2Ts7O4uLi93d3eTk5EZGRr29vdDQ0N/f3+jo6OXl5ff394eHh8zMzPX19aKiosvLy5GRkc3NzVNTU56enurq6u3t7bCwsKampqioqK+vr09PT8nJyZycnHV1dY+Pj/v7+z09PZubm/7+/pKSkmZmZpaWluLi4nh4eJeXl8fHx+Hh4cjIyEBAQH19fT8/Pzw8PJOTk39/f4ODg1ZWVo6Ojo2NjWpqamRkZKurq6Ojo7Kysrq6usTExOPj419fX/Pz83Z2dpSUlN7e3piYmODg4Lm5uaysrKmpqZ+fn/Dw8IiIiG1tbVBQUO7u7tTU1HBwcNLS0sLCwgAAANPYdGAAAAB5dFJOU////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////wClVIrsAAAACXBIWXMAAA7DAAAOwwHHb6hkAAADg2lUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4NCjx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMy1jMDExIDY2LjE0NTY2MSwgMjAxMi8wMi8wNi0xNDo1NjoyNyAgICAgICAgIj4NCiAgPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4NCiAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXBN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\"}","generator":"return 'say(\\'Hello\\')';",
  },{
    "name": "lookLeft","definition":"{\"number\":677,\"text\":\"Look Left\",\"image\":\"iVBORw0KGgoAAAANSUhEUgAAAFoAAABLCAMAAADH/GAOAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAFlUExURdTU1AAAAP39/erq6qurq/z8/OTk5E1NTTg4OHZ2dvv7+0xMTHt7e/r6+mFhYZ+fn8zMzHp6ekREREZGRlJSUoiIiNfX1/n5+YyMjMLCwi0tLTY2Njk5OTQ0NHR0dNjY2KKioujo6CYmJjc3NyAgICkpKX5+fvPz8/7+/k5OTqSkpMrKytDQ0O/v7z4+Pvf391dXV0lJSVpaWi8vLzo6Ojw8PHl5eeLi4kJCQsXFxbq6ujIyMsvLy4ODg7Ozs46OjoGBgY2NjZSUlGdnZ3d3d5KSkoSEhIuLi5ubm5ycnOfn5xQUFImJiZaWlvDw8JeXl+Dg4JCQkIWFhUBAQGhoaHFxcW1tbZiYmIaGhoeHh9ra2vLy8uXl5aCgoGRkZK2trc7OzllZWVRUVOPj4+3t7d7e3uHh4a+vr+7u7pqamnBwcMnJyb6+vktLS29vb1BQUJWVlcDAwKampqioqMTExLe3twAAADwrT4gAAAB3dFJOU/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////8AqZ+kZQAAAAlwSFlzAAAOwwAADsMBx2+oZAAAA4NpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+DQo8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJBZG9iZSBYTVAgQ29yZSA1LjMtYzAxMSA2Ni4xNDU2NjEsIDIwMTIvMDIvMDYtMTQ6NTY6MjcgICAgICAgICI+DQogIDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+DQogICAgPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wTU09Imh0dHA6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\"}","generator":"return 'look(\\'left\\')';",
  },{
    "name": "lookRight","definition":"{\"number\":421,\"text\":\"Look Right\",\"image\":\"iVBORw0KGgoAAAANSUhEUgAAAFoAAABLCAMAAADH/GAOAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAFoUExURdbW1gAAAP39/fT09OPj4+Li4unp6fn5+e7u7u/v7/Ly8v7+/vr6+vPz8+rq6qampnZ2djg4OE5OTuTk5Hp6ek1NTZ6enl9fX8zMzExMTEREREZGRlBQUIiIiIyMjMLCwi0tLTY2Njk5OTQ0NHR0dNjY2KCgoPz8/Ojo6GFhYSYmJjc3NyAgICkpKX5+ftDQ0MrKyqKioj8/P/f391dXV9TU1FpaWi8vLzo6Ojw8PHl5ecXFxUJCQklJSbm5uTIyMsvLy4KCgp+fn7Kyso2NjYGBgY6OjpSUlGdnZ6SkpJOTk4SEhIuLi5ubm5ycnJGRkRQUFJaWluDg4JeXl/Dw8JCQkFJSUkBAQGpqant7e3FxcW5uboaGhoeHh9ra2uXl5WRkZK2trc7OzllZWa+vr5iYmFRUVGxsbO3t7efn59LS0pqamsnJyUtLS1NTU6ioqL6+vpWVlcDAwN7e3qOjo8TExLa2tgAAAO+8kMUAAAB4dFJOU///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////AHxXGIwAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAODaVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/Pg0KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS4zLWMwMTEgNjYuMTQ1NjYxLCAyMDEyLzAyLzA2LTE0OjU2OjI3ICAgICAgICAiPg0KICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPg0KICAgIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiIHhtbG5zOnhtcE1NPSJo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\"}","generator":"return 'look(\\'right\\')';",
  },{
    "name": "raiseLeft","definition":"{\"number\":563,\"text\":\"Raise Left Arm\",\"image\":\"iVBORw0KGgoAAAANSUhEUgAAAFoAAABLCAMAAADH/GAOAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAFxUExURdTU1AAAAPr6+tfX14iIiFFRUURERExMTHt7e8zMzPj4+K6urmpqalhYWHJyctLS0tjY2Hx8fDExMTQ0NDg4ODk5OTY2NjAwMGhoaMLCwvDw8GdnZ+Dg4P7+/vPz8ykpKSAgIDc3NyYmJujo6Pz8/I2NjYSEhMrKyj8/P6qqqvHx8UlJSUZGRvb29i4uLjw8PDo6OmRkZL29vd7e3mBgYNDQ0G5ubs7OzlpaWoeHh0BAQObm5sjIyHh4eLm5uY6OjpqamouLi56enoyMjImJiQ0NDRkZGXR0dMXFxdra2pCQkEJCQlJSUuzs7H5+foCAgJiYmOTk5K+vr4ODg/Ly8rKysqampuPj4/39/VNTU19fX1xcXLa2tpaWlvf39/X19erq6qOjo5GRkaioqHBwcFRUVO/v72NjY5WVlaysrLW1tbu7u8fHx7+/v7q6ulZWVre3t8HBwZSUlI+Pj5OTk05OTnZ2dmxsbJ+fn6CgoAAAABX1LQ4AAAB7dFJOU///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////AJPDqOoAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAODaVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/Pg0KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS4zLWMwMTEgNjYuMTQ1NjYxLCAyMDEyLzAyLzA2LTE0OjU2OjI3ICAgICAgICAiPg0KICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPg0KICAgIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiIHht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\"}","generator":"return 'point(\\'left\\',\\'up\\')';",
  },{
    "name": "raiseRight","definition":"{\"number\":681,\"text\":\"Raise Right Arm\",\"image\":\"iVBORw0KGgoAAAANSUhEUgAAAFoAAABLCAMAAADH/GAOAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAFuUExURdTU1AAAAMzMzHp6ekxMTEREREZGRlFRUYiIiNfX1/r6+sLCwmhoaDAwMDY2Njg4ODk5OTQ0NDExMXx8fNjY2NLS0nJyclhYWGpqaq6urvj4+Pz8/Ojo6CYmJjc3NyAgICkpKfPz8/7+/uDg4GdnZ/Dw8PHx8aqqqj8/P8rKyoSEhI2NjWRkZC4uLjo6Ojw8PPb29klJSdDQ0GBgYN7e3r29vb6+vlpaWs7Ozm9vb7m5uXh4eMjIyObm5kBAQIeHh4uLi5qamo6OjsXFxXR0dBkZGQ0NDYmJiYyMjJ6enlJSUkJCQpCQkNra2uTk5JiYmICAgHt7e2xsbH5+fuzs7P39/ePj46ampoODg7KysvLy8rCwsFNTU1xcXF9fX/f395aWlra2tqOjo+rq6vX19XBwcKioqJGRke/v71ZWVlRUVJWVlbW1taysrLu7u8fHx7q6ure3t5SUlI+Pj5OTk05OTnZ2dp+fn6CgoAAAAGsfX1MAAAB6dFJOU/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////8A6D/oJgAAAAlwSFlzAAAOwwAADsMBx2+oZAAAA4NpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+DQo8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJBZG9iZSBYTVAgQ29yZSA1LjMtYzAxMSA2Ni4xNDU2NjEsIDIwMTIvMDIvMDYtMTQ6NTY6MjcgICAgICAgICI+DQogIDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+DQogICAgPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iIHhtbG5zOnN0UmVmPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VSZWYjIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDowMzgwMTE3NDA3MjA2ODExODIyQTlBMEI4QjE3QkRDOSIgeG1wTU06RG9jdW1lbnRJRD0ieG1wLmRpZDo4MjA3MUMzRUUyMDIxMUVBODcwQ0FGNjhDOENCQUQ2QiIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDo4MjA3MUMzREUyMDIxMUVBODcwQ0FGNjhDOENCQUQ2QiIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M2IChNYWNpbnRvc2gpIj4NCiAgICAgIDx4bXBNTTpEZXJpdmVkRnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAuaWlkOjMzQjY0QTYxMEMyMDY4MTE4MDgzQkIwNThEMkZDMDg5IiBzdFJlZjpkb2N1bWVudElEPSJ4bXAuZGlkOjAzODAxMTc0MDcyMDY4MTE4MjJBOUEwQjhCMTdCREM5IiAvPg0KICAgIDwvcmRmOkRlc2NyaXB0aW9uPg0KICA8L3JkZjpSREY+DQo8L3g6eG1wbWV0YT4NCjw/eHBhY2tldCBlbmQ9InIiPz6KkpKlAAAFtklEQVRYR+2Yj1fSWhzAPcYAMdjuLKB0gGiGwDZB04QE5JdXwaTQhNRSq2dRL3uR1f77d+/2RQWuY+XrvPPe6XMObvf73f24c7f7a0ND2q/i15n/7+rhGzaOs3OcwzkCkS5ccLyEVfXoTbeH53mBR+LYLYhdcNvr89+5C4UO1tTjE35JClC1gIIh52QY4sAUjzwITd+DImBNPXM/JEWImcojkjjbc4NR+l95dwyKgDX1VFyWFd3M86osOycgbjBn1xOBBJQBa+pkQkSCXp/ctijOL0Dc4AFkHFAGrKkX7TLq3LXilpceQtzAD5llKAPW1KlpKXTR1qH0I4jrrKhGJpOFAGBN/SAakHj9WfE8krhcl3rViPNLeQgA1tSFXFEuuZHH40FyWV3DwxCnjDtAnV6HCGDxMeJocSOjKIKiVnxpZ3UT4pSHYE7kkhABrKkfb2Fce+JdfrpcrEcxvr8NccoTUE9Xe972weqde89uze7W67VsrV6vN7K1J/VmcvPxc0jPVAyz2tiDSIeB6p2V3ekKaQqEVI6QURASFMXubc4Y+T3DzO/jx0bgnEHqnaRNEREdIgj0MepH8oscPNMveAHq4lbPwDJQPbJUChFXgELMHjhDYqjkpe4F6EncWsGocMEA9ba3LKpKp49fQNpELjvnNC0PgRexTuOfw1a7tp9tbr/c0cKHUlDtF1OESEk40lwJKNV3oeoFTHV4yM9xieNX2uubEjLq9iPIobr2CLqoDV9+1Q2Y6qE3Qdktef7Y2XZInVGpH0/oRTgK/9l/0j+DMdV1mYwYKBh/u2k7H6YZiO/G66J+FommoOolmOoDlTSwEnBsFmx0QryCAL/hOvHQ2/a08OX+CTDVSxH66JBjJGWqDjhevl+zIyRWcqtQ8zJMtU8fm5FjtGm78ikStWdjcgvnxrzpWNdQ2MFUnfowSP0n1smTN7yPa6pXDPUdqNiFqfrj0SC1NnJIzCevoGIX11Vrk8nFU8brQbi2+mp+q3v4re7BXG3eGwMbfZPWZUzVn0yHJz7ggAUDG6baFiGLT8Vj+2vAGPLuNVRgwlbLoqIoEvdg1CGzJ12KB238uPpGJIiQHIw/Kvik891AL2TaPWCNpecw1e/TISkUTHyenZ2Wrpp3BTUYajB2ixcw1W1nOl2s12LJhXarHFBYckURy/MnvWuxLpjqLxjn1nI4PzWHnXayMCPbRXKbIKWnZGcaKr1r9+zmemCqP+T1uWN1TmvHGioSZVkkf0REVntIdNNztztgz8W+wPVsmOq3Teo+JHPpMcaNuF0RBJW0iqCqZP1Hdgbkl/BnMT6C69kw1eHJhcWPwytklT/1GeecUaezNlaLRr3Ly8vFaLQ21lgjsRxe7dk598BUE+Ze608/fHpCmyaX9r9pkAPx4cYbf5ocMH7P/MRwwVXqDnPDW7F81mevZM6K5OniL8WzTMXuy7bz6yM7cM0VDFJr4YUPnw/KkiiXgtlqu5oNlmRRKh8cfurepzMYqNbG7x5mSJcUAsiXup3yoQA5R5kt14B7tqLWtJMM3RcoSivpSrZoBxKUTBVyJlhR1znaXQR1f1Fb3Nc3CQJXh5wJVtRFTu+GSqupNVtGr+eKkDPhR9T7RL3/z6q/MtRfIWfCv6xOG9+WVL2tje8q9jTkTLCi9lborSrqGVGf0XGKVypeyJlgRf2UDHX0ZU7saXsJ+oqTgfAp5Eywom5USqQ7SsF4SkvFgxLpjKVKFHImWFGv12RJDkmtakErVFtSiJRqPR+DWFhRr+b98w5fvBY71U5jtbhvY96fZ+3merCiPsY5HKVzZVJL5nEuFyXlY8iZYEVdaNORH+NvK9rKN+O03ff1ox8r6pmjGNVtLbg018IWPY0dma72DKyotZnR3fXvTeOzxGbz+/ruqAWzNbW283xiu/Op7e72xPOB0wDFmvqn+I+qzVdAP4+m/Q0JVH5zKvY68QAAAABJRU5ErkJggg==\"}","generator":"return 'point(\\'right\\',\\'up\\')';",
  },{
    "name": "rest","definition":"{\"number\":369,\"text\":\"Rest\",\"image\":\"iVBORw0KGgoAAAANSUhEUgAAAFoAAABLCAMAAADH/GAOAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAFNUExURdTU1AAAAKKiojg4OIaGho+Pj62trYyMjGZmZlpaWrGxsXZ2dk5OToGBgT4+PkJCQsnJyUlJSXt7e9HR0Wtra7q6upWVlXh4eKioqKWlpcLCwszMzHp6ekxMTERERFJSUoiIiNjY2GFhYS0tLTY2Njk5OTQ0NHR0dPz8/Ojo6CYmJjc3NyAgICkpKX5+fvPz8/7+/vDw8D8/P/f39y8vLzo6Oj09PePj4zIyMldXV8vLy5+fn7KyspSUlKSkpJKSkoSEhIuLi5qamhQUFImJiZeXl0BAQHBwcG1tbf39/YKCgoeHh46Ojtra2uTk5PLy8uXl5aCgoGRkZM7OzllZWVRUVO3t7WhoaPr6+o2Nja+vr9DQ0EdHR/T09Ofn50ZGRtLS0p6enm9vb8bGxu7u7lBQUL6+vsDAwKampt7e3uDg4Onp6cTExLa2tgAAAD8qD8cAAABvdFJOU///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////AP5WdtUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAODaVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/Pg0KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS4zLWMwMTEgNjYuMTQ1NjYxLCAyMDEyLzAyLzA2LTE0OjU2OjI3ICAgICAgICAiPg0KICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPg0KICAgIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxuczpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6MDM4MDExNzQwNzIwNjgxMTgyMkE5QTBCOEIxN0JEQzkiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6Q0JDNjgzNUZFMUZFMTFFQTg3MENBRjY4QzhDQkFENkIiIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6Q0JDNjgzNUVFMUZFMTFFQTg3MENBRjY4QzhDQkFENkIiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNiAoTWFjaW50b3NoKSI+DQogICAgICA8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDozM0I2NEE2MTBDMjA2ODExODA4M0JCMDU4RDJGQzA4OSIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDowMzgwMTE3NDA3MjA2ODExODIyQTlBMEI4QjE3QkRDOSIgLz4NCiAgICA8L3JkZjpEZXNjcmlwdGlvbj4NCiAgPC9yZGY6UkRGPg0KPC94OnhtcG1ldGE+DQo8P3hwYWNrZXQgZW5kPSJyIj8+k+ftogAAAz5JREFUWEftlu1b0lAUwHkYOixhSSpmTcRtlxywQLYxMpWXVMi0jCTN1NK0d/7/j93Bwbvm3pzjefrA7wvn3t3z2557DncLhbrDYnjmkdrMSG1ipDYRpDpM9QjDMEh1pK8eg2GQ6nGapqPUxD0YBqy+T03Sw1HH4kxkKOoHkal4gqYfwvDuakNfTFPTND3Tnw5CTfoCbjILF+6uJn2R6KuTcCEQNfTFHL4J5hFcCEI96IuA1KR4pC8CUhv+1Nd9Md9Xz/cW+FeT4pn6gnAHNRTP1BcE/2qb4hH8qm2LR/CrJsULXE2KZ+oLgmf14yfsgk5qMa0PbYtH8KqeX+J4rBIoxGV0t+02ELypny4viWJWVwsol5eeFYJTF8OiuNLbAUqIi9x8KTh1aIKTlb6aUjkuWbYvHsGbemZBQwKoBU2rPId5R7ypVxdkNHhqRZYrL2DeEW/qtaiYj/fNeK/zyXWYd8SbeqOaFSm9QzBIZGp1mHfEo7qWkRsy4nkecQ31Jb0J8454U4/R1UxqS1EERWUqyUV6DeYd8fjUuM9iie1ms5mRqjgO6KlbxXK6mpGkWCQmSdKrnVgikXy9u/cGLtvjqm693X/HCAqFkMrg02lLQYhSFKY5XoQFtripW+0pXkOIRzp6GXu/CGnC+zIsscNNHTrIcdiV1cFmHiKk5RvTLm4XdedDQ1aVwX+cICgK15BKsMoaa/Vhp7zbKbW6hSMxp94U6whqDn3Ex22ps7vXOYS8f7BUF46jDPNpf7l7MiEiUN1A4PLb3e7p6hnDRNsFyDRiqf4czXGyqH1plVlxcCrdhM9XCq26JspcLjr4XDdiqT7n8ImBcgedC/b6mLZASx1+TeVQlhK5c8g0YqlmVbzBSnaqPcfqL0QbslSq1D6jFLztKguZRizVlRW9dOjyatZRnU0Vv7G9N+ZKBTKN2Kj1VHS5XmNtq4jVfOr0e//et1dv7Liof6xN+lTXqi7qdM2vetFNHdrxq464qY8jftVVN3W7+h+pex9GmA39xeVE+noBZBpxVNc3IbDjZx2CW6vnwhDY8Qu+Kr2rj2D97ysI7Di5gOAIMo1YqoNhpDYxUpsYqU2E/kAQNN3uX7YLSoyavABNAAAAAElFTkSuQmCC\"}","generator":"return 'rest()';",
  },{
    "name": "stand","definition":"{\"number\":613,\"text\":\"Stand\",\"image\":\"iVBORw0KGgoAAAANSUhEUgAAAFoAAABLCAMAAADH/GAOAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAFxUExURdbW1gAAAMzMzHt7e0xMTEREREZGRlFRUYiIiMHBwWhoaDAwMDY2Njg4ODk5OTQ0NDExMXx8fNjY2Pz8/Ojo6GpqaiYmJjc3NyAgICkpKfPz8/7+/vHx8aqqqj8/P8rKyvj4+ODg4GRkZC4uLjs7Ozw8PNDQ0ElJSWBgYN7e3r6+vjo6OlpaWs7Ozrm5uWdnZ3h4eMjIyISEhIuLi8TExHR0dBkZGQ0NDYmJiYyMjIaGhlJSUkBAQEJCQldXV5GRkdra2uTk5JqamoKCgnBwcG9vb2xsbH5+fuzs7P39/fDw8OPj46amprOzs/Ly8ubm5rKysl1dXXJycvb29vr6+vf395aWlra2ttTU1KOjo+rq6vX19aKioqioqF9fX9LS0u/v71RUVF5eXsbGxk5OTlhYWLS0tLu7u7q6ury8vJSUlHZ2do+Pj42NjY6Ojtzc3JKSkrGxscvLy4CAgJiYmJ6enlNTU6+vr5+fn6CgoAAAAFGwBOwAAAB7dFJOU///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////AJPDqOoAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAODaVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/Pg0KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS4zLWMwMTEgNjYuMTQ1NjYxLCAyMDEyLzAyLzA2LTE0OjU2OjI3ICAgICAgICAiPg0KICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPg0KICAgIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiIHht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\"}","generator":"return 'position(\\'Stand\\')';",
  },{
    "name": "walk","definition":"{\"number\":565,\"text\":\"Walk\",\"image\":\"iVBORw0KGgoAAAANSUhEUgAAAFoAAABLCAMAAADH/GAOAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAF9UExURdTU1AAAAPr6+vz8/OLi4n5+fnt7e8zMzObm5kRERCkpKTQ0NG9vb7Ozs/Ly8mdnZ0xMTDY2Njo6Ot7e3v39/VJSUoiIiNfX1/b29piYmIqKiklJScXFxfj4+MLCwmhoaDAwMDg4ODk5OTExMXx8fNjY2KampoyMjJOTk4KCgi4uLujo6GpqaiYmJjc3NyAgIPPz8/7+/paWloSEhFxcXPHx8ampqT8/P8rKyqKiorq6upycnJKSkl9fX2BgYGRkZDw8POrq6nR0dO/v7729vZSUlNDQ0Nra2pqamo6Ojvv7+0ZGRs7OzpeXl1BQUOzs7Lm5uXh4eMjIyKioqHJyclRUVIuLi5+fn8TExBkZGQ0NDb+/v5GRkXZ2dvf391paWoWFhUBAQEJCQldXV+Dg4OTk5G1tbU5OTtLS0vDw8KSkpFhYWLa2trKyso+Pj62trbCwsPT09I2NjbW1tbu7u7e3t9zc3ICAgJ6ensDAwK6urmxsbFlZWaCgoAAAAM+4S3EAAAB/dFJOU////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////wD/4TwJAAAACXBIWXMAAA7DAAAOwwHHb6hkAAADg2lUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4NCjx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMy1jMDExIDY2LjE0NTY2MSwgMjAxMi8wMi8wNi0xNDo1NjoyNyAgICAgICAgIj4NCiAgPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4NCiAgICA8cmRmOkRlc2NyaXB0aW9u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\"}","generator":"return 'walk(3,0)';",
  },{
    "name": "wave","definition":"{\"number\":425,\"text\":\"Wave\",\"image\":\"iVBORw0KGgoAAAANSUhEUgAAAFoAAABLCAMAAADH/GAOAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAGDUExURQAAAN7e3piYmH5+frq6uvj4+O7u7urq6tnZ2UBAQDAwMDMzMywsLJaWlv39/ba2tk1NTTc3N2dnZ+Tk5Pv7+2FhYTIyMjo6Ojk5OeLi4tfX1y4uLjY2NlpaWvn5+fHx8UZGRjg4OMDAwJGRkcbGxuvr61ZWVjU1NYODg4yMjHBwcFxcXGRkZP7+/pqamjQ0NPX19ZeXl1NTU5SUlPDw8IWFhdHR0YaGhnZ2dqmpqV9fX7S0tI6Ojry8vIqKinl5efr6+pycnHt7e0RERE9PT2pqavz8/IiIiENDQ/T09J6enpOTk3p6eqioqNTU1LCwsI+Pj9XV1ejo6I2Njdvb21BQUG1tbaampqCgoObm5pKSkrm5ueXl5aysrEhISD09PYuLi/b29nx8fFRUVEpKStzc3KKiom5ubs7OzlhYWHJycnR0dPf398zMzPLy8oCAgIeHh8rKytPT0zw8PMPDw66urigoKL29veDg4LKysqSkpOzs7MLCwsjIyL6+vmhoaAAAAM5i+IQAAACBdFJOU///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////AJLI408AAAAJcEhZcwAADsIAAA7CARUoSoAAAAODaVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/Pg0KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS4zLWMwMTEgNjYuMTQ1NjYxLCAyMDEyLzAyLzA2LTE0OjU2OjI3ICAgICAgICAiPg0KICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPg0KICAgIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxuczpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6MDM4MDExNzQwNzIwNjgxMTgyMkE5QTBCOEIxN0JEQzkiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6QkJCQkMyRUFENjI1MTFFQUE1ODE4OTM0NDM4ODBENTUiIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6QkJCQkMyRTlENjI1MTFFQUE1ODE4OTM0NDM4ODBENTUiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNiAoTWFjaW50b3NoKSI+DQogICAgICA8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDpGQTdGMTE3NDA3MjA2ODExODA4M0JCMDU4RDJGQzA4OSIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDowMzgwMTE3NDA3MjA2ODExODIyQTlBMEI4QjE3QkRDOSIgLz4NCiAgICA8L3JkZjpEZXNjcmlwdGlvbj4NCiAgPC9yZGY6UkRGPg0KPC94OnhtcG1ldGE+DQo8P3hwYWNrZXQgZW5kPSJyIj8+4TSxNgAACGdJREFUWEftmP1b2sgWx9eXok6oEkvDKNEyBQmDslFBpZBS3xW1Cy2tVNQKreutpe3abfdub7du50/fM5OA4S3w7PPsD/c+9/sDTw5JPpk5c86Zk/zA/jH9H92k/310X//A4C3ruAc5o11DNtTwCJLct0ctq7uc0KNjHnn8jmUw713Fh2U8YZnd5YSe9KtYmZq2rHsBlRCC7ltmdzmhg8hHsD9kWTNhDdBSxDK7ywlN/YRgKWp5d2aWj1qai5lmdzmhf9RlQlSf5d2ZKAK0GnCZZpPmh6yDGzmhFxZ1QnwoblqJJTeGWWjLptmo0RVff/MzHUed9PtgnJ55YY0OcF8T9EBYTfIu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\"}","generator":"return 'wave()';"
  },{
    "name": "if","definition":"{\"number\":465,\"text\":\"If\",\"xOffset\":\"children\",\"image\":\"iVBORw0KGgoAAAANSUhEUgAAAFoAAABLCAMAAADH/GAOAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAGDUExURQAAAN7e3piYmH5+frq6uvj4+O7u7urq6tnZ2UBAQDAwMDMzMywsLJaWlv39/ba2tk1NTTc3N2dnZ+Tk5Pv7+2FhYTIyMjo6Ojk5OeLi4tfX1y4uLjY2NlpaWvn5+fHx8UZGRjg4OMDAwJGRkcbGxuvr61ZWVjU1NYODg4yMjHBwcFxcXGRkZP7+/pqamjQ0NPX19ZeXl1NTU5SUlPDw8IWFhdHR0YaGhnZ2dqmpqV9fX7S0tI6Ojry8vIqKinl5efr6+pycnHt7e0RERE9PT2pqavz8/IiIiENDQ/T09J6enpOTk3p6eqioqNTU1LCwsI+Pj9XV1ejo6I2Njdvb21BQUG1tbaampqCgoObm5pKSkrm5ueXl5aysrEhISD09PYuLi/b29nx8fFRUVEpKStzc3KKiom5ubs7OzlhYWHJycnR0dPf398zMzPLy8oCAgIeHh8rKytPT0zw8PMPDw66urigoKL29veDg4LKysqSkpOzs7MLCwsjIyL6+vmhoaAAAAM5i+IQAAACBdFJOU///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////AJLI408AAAAJcEhZcwAADsIAAA7CARUoSoAAAAODaVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/Pg0KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS4zLWMwMTEgNjYuMTQ1NjYxLCAyMDEyLzAyLzA2LTE0OjU2OjI3ICAgICAgICAiPg0KICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPg0KICAgIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxuczpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6MDM4MDExNzQwNzIwNjgxMTgyMkE5QTBCOEIxN0JEQzkiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6QkJCQkMyRUFENjI1MTFFQUE1ODE4OTM0NDM4ODBENTUiIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6QkJCQkMyRTlENjI1MTFFQUE1ODE4OTM0NDM4ODBENTUiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNiAoTWFjaW50b3NoKSI+DQogICAgICA8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDpGQTdGMTE3NDA3MjA2ODExODA4M0JCMDU4RDJGQzA4OSIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDowMzgwMTE3NDA3MjA2ODExODIyQTlBMEI4QjE3QkRDOSIgLz4NCiAgICA8L3JkZjpEZXNjcmlwdGlvbj4NCiAgPC9yZGY6UkRGPg0KPC94OnhtcG1ldGE+DQo8P3hwYWNrZXQgZW5kPSJyIj8+4TSxNgAACGdJREFUWEftmP1b2sgWx9eXok6oEkvDKNEyBQmDslFBpZBS3xW1Cy2tVNQKreutpe3abfdub7du50/fM5OA4S3w7PPsD/c+9/sDTw5JPpk5c86Zk/zA/jH9H92k/310X//A4C3ruAc5o11DNtTwCJLct0ctq7uc0KNjHnn8jmUw713Fh2U8YZnd5YSe9KtYmZq2rHsBlRCC7ltmdzmhg8hHsD9kWTNhDdBSxDK7ywlN/YRgKWp5d2aWj1qai5lmdzmhf9RlQlSf5d2ZKAK0GnCZZpPmh6yDGzmhFxZ1QnwoblqJJTeGWWjLptmo0RVff/MzHUed9PtgnJ55YY0OcF8T9EBYTfIu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\"}","generator":"return 'wave()';"
  },{
    "name": "end","definition":"{\"number\":391,\"text\":\"End\",\"xOffset\":\"end\",\"image\":\"iVBORw0KGgoAAAANSUhEUgAAAFoAAABLCAMAAADH/GAOAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAGDUExURQAAAN7e3piYmH5+frq6uvj4+O7u7urq6tnZ2UBAQDAwMDMzMywsLJaWlv39/ba2tk1NTTc3N2dnZ+Tk5Pv7+2FhYTIyMjo6Ojk5OeLi4tfX1y4uLjY2NlpaWvn5+fHx8UZGRjg4OMDAwJGRkcbGxuvr61ZWVjU1NYODg4yMjHBwcFxcXGRkZP7+/pqamjQ0NPX19ZeXl1NTU5SUlPDw8IWFhdHR0YaGhnZ2dqmpqV9fX7S0tI6Ojry8vIqKinl5efr6+pycnHt7e0RERE9PT2pqavz8/IiIiENDQ/T09J6enpOTk3p6eqioqNTU1LCwsI+Pj9XV1ejo6I2Njdvb21BQUG1tbaampqCgoObm5pKSkrm5ueXl5aysrEhISD09PYuLi/b29nx8fFRUVEpKStzc3KKiom5ubs7OzlhYWHJycnR0dPf398zMzPLy8oCAgIeHh8rKytPT0zw8PMPDw66urigoKL29veDg4LKysqSkpOzs7MLCwsjIyL6+vmhoaAAAAM5i+IQAAACBdFJOU///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////AJLI408AAAAJcEhZcwAADsIAAA7CARUoSoAAAAODaVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/Pg0KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS4zLWMwMTEgNjYuMTQ1NjYxLCAyMDEyLzAyLzA2LTE0OjU2OjI3ICAgICAgICAiPg0KICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPg0KICAgIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxuczpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6MDM4MDExNzQwNzIwNjgxMTgyMkE5QTBCOEIxN0JEQzkiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6QkJCQkMyRUFENjI1MTFFQUE1ODE4OTM0NDM4ODBENTUiIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6QkJCQkMyRTlENjI1MTFFQUE1ODE4OTM0NDM4ODBENTUiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNiAoTWFjaW50b3NoKSI+DQogICAgICA8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDpGQTdGMTE3NDA3MjA2ODExODA4M0JCMDU4RDJGQzA4OSIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDowMzgwMTE3NDA3MjA2ODExODIyQTlBMEI4QjE3QkRDOSIgLz4NCiAgICA8L3JkZjpEZXNjcmlwdGlvbj4NCiAgPC9yZGY6UkRGPg0KPC94OnhtcG1ldGE+DQo8P3hwYWNrZXQgZW5kPSJyIj8+4TSxNgAACGdJREFUWEftmP1b2sgWx9eXok6oEkvDKNEyBQmDslFBpZBS3xW1Cy2tVNQKreutpe3abfdub7du50/fM5OA4S3w7PPsD/c+9/sDTw5JPpk5c86Zk/zA/jH9H92k/310X//A4C3ruAc5o11DNtTwCJLct0ctq7uc0KNjHnn8jmUw713Fh2U8YZnd5YSe9KtYmZq2rHsBlRCC7ltmdzmhg8hHsD9kWTNhDdBSxDK7ywlN/YRgKWp5d2aWj1qai5lmdzmhf9RlQlSf5d2ZKAK0GnCZZpPmh6yDGzmhFxZ1QnwoblqJJTeGWWjLptmo0RVff/MzHUed9PtgnJ55YY0OcF8T9EBYTfIu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\"}","generator":"return 'wave()';"
  }]
}
###

POST {{baseURL}}/ui/angular HTTP/1.1
Content-Type: application/json; charset=utf-8
Authorization: Bearer {{authToken}}

{
  "blocks": [
{"name": "colour_picker","definition":"SYSTEM","generator":"var code = block.getFieldValue('COLOUR');if (code[0] != '#') code = '#' + code;return [code, Blockly.NaoLang.ORDER_ATOMIC];"},
{"name": "colour_random","definition":"SYSTEM","generator":"var code = 'randomColour()';return [code, Blockly.NaoLang.ORDER_FUNCTION_CALL];"},
{"name": "controls_if","definition":"SYSTEM","generator":"var n = 0,code = '';do {Blockly.NaoLang.prefixLevel++;var conditionCode = Blockly.NaoLang.valueToCode(block, 'IF' + n, Blockly.NaoLang.ORDER_NONE) || 'FALSE',branchCode = Blockly.NaoLang.statementToCode(block, 'DO' + n) || '';Blockly.NaoLang.prefixLevel--;code += (n == 0 ? 'if' : 'elseif') + '(' + conditionCode + '){\\n' + branchCode + Blockly.NaoLang.generatePrefix() + '}\\n';++n;} while (block.getInput('IF' + n));if (block.getInput('ELSE')) {Blockly.NaoLang.prefixLevel++;var branchCode = Blockly.NaoLang.statementToCode(block, 'ELSE') || '';Blockly.NaoLang.prefixLevel--;code += 'else{\\n' + branchCode + Blockly.NaoLang.generatePrefix() + '}\\n';}return Blockly.NaoLang.generatePrefix() + code;"},
{"name": "controls_repeat_ext","definition":"SYSTEM","generator":"if (block.getField('TIMES')) {var repeats = String(parseInt(block.getFieldValue('TIMES'), 10));} else {var repeats = Blockly.NaoLang.valueToCode(block, 'TIMES', Blockly.NaoLang.ORDER_NONE) || '0';}Blockly.NaoLang.prefixLevel++;var branch = Blockly.NaoLang.statementToCode(block, 'DO'),code = 'loop(' + repeats + '){\\n' + branch;Blockly.NaoLang.prefixLevel--;return Blockly.NaoLang.generatePrefix() + code +Blockly.NaoLang.generatePrefix() + '}\\n';"},
{"name": "controls_whileUntil","definition":"SYSTEM","generator":"Blockly.NaoLang.prefixLevel++;var until = block.getFieldValue('MODE') == 'UNTIL',argument0 = Blockly.NaoLang.valueToCode(block, 'BOOL', until ? Blockly.NaoLang.ORDER_LOGICAL_NOT : Blockly.NaoLang.ORDER_NONE) || 'FALSE',branch = Blockly.NaoLang.statementToCode(block, 'DO');Blockly.NaoLang.prefixLevel--;if (until) {argument0 = 'not(' + argument0 + ')';}return Blockly.NaoLang.generatePrefix() + 'while(' + argument0 + '){\\n' + branch +Blockly.NaoLang.generatePrefix() + '}\\n';"},
{"name": "drone_flip","definition":"{\"type\":\"drone_flip\",\"message0\":\"Flip %1\",\"args0\":[{\"type\":\"field_dropdown\",\"name\":\"DIRECTION\",\"options\":[[\"Forward\",\"FORWARD\"],[\"Left\",\"LEFT\"],[\"Right\",\"RIGHT\"],[\"Backward\",\"BACKWARD\"]]}],\"inputsInline\":true,\"nextStatement\":null,\"previousStatement\":null,\"colour\":65,\"tooltip\":\"Tells the drone to flip in a direction.\"}","generator":"var dir = block.getFieldValue('DIRECTION');return Blockly.NaoLang.generatePrefix() + 'flip(' + dir + ')\\n';"},
{"name": "drone_fly","definition":"{\"type\":\"drone_fly\",\"message0\":\"Fly %1 %2 cm\",\"args0\":[{\"type\":\"field_dropdown\",\"name\":\"DIRECTION\",\"options\":[[\"Forward\",\"FORWARD\"],[\"Left\",\"LEFT\"],[\"Right\",\"RIGHT\"],[\"Backward\",\"BACKWARD\"],[\"Up\",\"UP\"],[\"Down\",\"DOWN\"]]},{\"type\":\"input_value\",\"check\":\"Number\",\"name\":\"DISTANCE\"}],\"inputsInline\":true,\"nextStatement\":null,\"previousStatement\":null,\"colour\":65,\"tooltip\":\"Tells the drone to fly in a direction for a certain distance.\"}","generator":"var dist = Blockly.NaoLang.valueToCode(block, 'DISTANCE', Blockly.NaoLang.ORDER_ATOMIC),dir = block.getFieldValue('DIRECTION');return Blockly.NaoLang.generatePrefix() + 'fly(' + dir + ', ' + dist + ')\\n';"},
{"name": "drone_land","definition":"{\"type\":\"drone_land\",\"message0\":\"Land\",\"nextStatement\":null,\"previousStatement\":null,\"colour\":65,\"tooltip\":\"Tells the drone to land.\"}","generator":"return Blockly.NaoLang.generatePrefix() + 'land()\\n';"},
{"name": "drone_stop","definition":"{\"type\":\"drone_stop\",\"message0\":\"Stop\",\"nextStatement\":null,\"previousStatement\":null,\"colour\":65,\"tooltip\":\"Tells the drone to stop in position and hover.\"}","generator":"return Blockly.NaoLang.generatePrefix() + 'stop()\\n';"},
{"name": "drone_takeoff","definition":"{\"type\":\"drone_takeoff\",\"message0\":\"Takeoff\",\"nextStatement\":null,\"previousStatement\":null,\"colour\":65,\"tooltip\":\"Tells the drone to take off.\"}","generator":"return Blockly.NaoLang.generatePrefix() + 'takeoff()\\n';"},
{"name": "logic_boolean","definition":"SYSTEM","generator":"var code = (block.getFieldValue('BOOL') == 'TRUE') ? 'TRUE' : 'FALSE';return [code, Blockly.NaoLang.ORDER_ATOMIC];"},
{"name": "logic_compare","definition":"SYSTEM","generator":"var OPERATORS = {'EQ': 'equal','NEQ': 'notEqual','LT': 'lessThan','LTE': 'lessThanEqual','GT': 'greaterThan','GTE': 'greaterThanEqual'};var operator = OPERATORS[block.getFieldValue('OP')];var order = Blockly.NaoLang.ORDER_RELATIONAL;var argument0 = Blockly.NaoLang.valueToCode(block, 'A', order) || '0';var argument1 = Blockly.NaoLang.valueToCode(block, 'B', order) || '0';var code = operator + '(' + argument0 + ', ' + argument1 + ')';return [code, order];"},
{"name": "logic_negate","definition":"SYSTEM","generator":"var argument0 = Blockly.NaoLang.valueToCode(block, 'BOOL', Blockly.NaoLang.ORDER_LOGICAL_NOT) || 'TRUE',code = 'not(' + argument0 + ')';return [code, Blockly.NaoLang.ORDER_LOGICAL_NOT];"},
{"name": "logic_operation","definition":"SYSTEM","generator":"var OPERATORS = {'AND': 'and','OR': 'or'};var operator = OPERATORS[block.getFieldValue('OP')],order = Blockly.NaoLang.ORDER_RELATIONAL,argument0 = Blockly.NaoLang.valueToCode(block, 'A', order) || 'FALSE',argument1 = Blockly.NaoLang.valueToCode(block, 'B', order) || 'FALSE',code = operator + '(' + argument0 + ', ' + argument1 + ')';return [code, order];"},
{"name": "math_arithmetic","definition":"SYSTEM","generator":"var OPERATORS = {'ADD': [' + ', Blockly.NaoLang.ORDER_ADDITIVE],'MINUS': [' - ', Blockly.NaoLang.ORDER_ADDITIVE],'MULTIPLY': [' * ', Blockly.NaoLang.ORDER_MULTIPLICATIVE],'DIVIDE': [' / ', Blockly.NaoLang.ORDER_MULTIPLICATIVE],'POWER': [' ** ', Blockly.NaoLang.ORDER_EXPONENTIATION]};var tuple = OPERATORS[block.getFieldValue('OP')],operator = tuple[0],order = tuple[1],argument0 = Blockly.NaoLang.valueToCode(block, 'A', order) || '0',argument1 = Blockly.NaoLang.valueToCode(block, 'B', order) || '0',code = argument0 + operator + argument1;return [code, order];"},
{"name": "math_change","definition":"SYSTEM","generator":"var argument0 = Blockly.NaoLang.valueToCode(block, 'DELTA', Blockly.NaoLang.ORDER_ADDITIVE) || '0',varName = Blockly.NaoLang.nameDB_.getName(block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);return 'addTo(@' + varName + ', ' + argument0 + ')\\n';"},
{"name": "math_number","definition":"SYSTEM","generator":"var code = parseFloat(block.getFieldValue('NUM')),order = Blockly.NaoLang.ORDER_ATOMIC;return [code, order];"},
{"name": "math_number_property","definition":"SYSTEM","generator":"var number_to_check = Blockly.NaoLang.valueToCode(block, 'NUMBER_TO_CHECK', Blockly.NaoLang.ORDER_MULTIPLICATIVE) || '0',dropdown_property = block.getFieldValue('PROPERTY'),code;switch (dropdown_property) {case 'PRIME':code = 'isPrime(' + number_to_check + ')';break;case 'EVEN':code = 'isEven(' + number_to_check + ')';break;case 'ODD':code = 'isOdd(' + number_to_check + ')';break;case 'WHOLE':code = 'isWhole(' + number_to_check + ')'; number_to_check + ' % 1 == 0';break;case 'POSITIVE':code = 'isPostive(' + number_to_check + ')';break;case 'NEGATIVE':code = 'isNegative(' + number_to_check + ')';break;case 'DIVISIBLE_BY':var divisor = Blockly.NaoLang.valueToCode(block, 'DIVISOR', Blockly.NaoLang.ORDER_MULTIPLICATIVE);code = 'isPrime(' + number_to_check + ',' + divisor + ')';;break;}return [code, Blockly.NaoLang.ORDER_RELATIONAL];"},
{"name": "math_random_int","definition":"SYSTEM","generator":"var argument0 = Blockly.NaoLang.valueToCode(block, 'FROM', Blockly.NaoLang.ORDER_NONE) || '0';var argument1 = Blockly.NaoLang.valueToCode(block, 'TO', Blockly.NaoLang.ORDER_NONE) || '0';var code = 'randomInt(' + argument0 + ', ' + argument1 + ')';return [code, Blockly.NaoLang.ORDER_FUNCTION_CALL];"},
{"name": "math_round","definition":"SYSTEM","generator":"var operator = block.getFieldValue('OP'),code,arg = Blockly.NaoLang.valueToCode(block, 'NUM', Blockly.NaoLang.ORDER_NONE) || '0';switch (operator) {case 'ROUND':code = 'round(' + arg + ')';break;case 'ROUNDUP':code = 'roundup(' + arg + ')';break;case 'ROUNDDOWN':code = 'rounddown(' + arg + ')';break;}return [code, Blockly.NaoLang.ORDER_MULTIPLICATIVE];"},
{"name": "robot_action","definition":"{\"type\":\"robot_action\",\"message0\":\"Do %1\",\"args0\":[{\"type\":\"field_dropdown\",\"name\":\"ACTION\",\"options\":[[\"Wave\",\"wave\"],[\"Wipe Forehead\",\"wipe_forehead\"]]}],\"inputsInline\":true,\"nextStatement\":null,\"previousStatement\":null,\"colour\":65,\"tooltip\":\"Performs an action and returns to the previous position.\"}","generator":"var code = block.getFieldValue('ACTION');return Blockly.NaoLang.generatePrefix() + code + '()\\n';"},
{"name": "robot_action_and_say","definition":"{\"type\":\"robot_action_and_say\",\"message0\":\"Do %1 and say %2\",\"args0\":[{\"type\":\"field_dropdown\",\"name\":\"ACTION\",\"options\":[[\"Wave\",\"wave\"],[\"Wipe Forehead\",\"wipe_forehead\"]]},{\"type\":\"input_value\",\"name\":\"TEXT\"}],\"inputsInline\":true,\"nextStatement\":null,\"previousStatement\":null,\"colour\":65,\"tooltip\":\"Performs an action and returns to the previous position.\"}","generator":"var textToSpeak = Blockly.NaoLang.valueToCode(block, 'TEXT', Blockly.NaoLang.ORDER_ATOMIC),code = block.getFieldValue('ACTION');return Blockly.NaoLang.generatePrefix() + code + '(' + textToSpeak + ')\\n';"},
{"name": "robot_action_wave","definition":"{\"type\":\"robot_action_wave\",\"message0\":\"Wave\",\"inputsInline\":true,\"nextStatement\":null,\"previousStatement\":null,\"colour\":65,\"tooltip\":\"Performs a wave action\"}","generator":"return 'wave()\\n';"},
{"name": "robot_action_wipe_forehead","definition":"{\"type\":\"robot_action_wipe_forehead\",\"message0\":\"Wipe Forehead\",\"inputsInline\":true,\"nextStatement\":null,\"previousStatement\":null,\"colour\":65,\"tooltip\":\"Performs a Wipe Forehead action\"}","generator":"return 'wipe_forehead()\\n';"},
{"name": "robot_change_chest","definition":"{\"type\":\"robot_change_chest\",\"message0\":\"Change chest to %1\",\"args0\":[{\"type\":\"input_value\",\"name\":\"COLOUR\"}],\"inputsInline\":true,\"previousStatement\":null,\"nextStatement\":null,\"colour\":65,\"tooltip\":\"Changes the colour of the robot's chest.\"}","generator":"var value_colour = Blockly.NaoLang.valueToCode(block, 'COLOUR', Blockly.NaoLang.ORDER_ATOMIC);return Blockly.NaoLang.generatePrefix() + 'changeLEDColour(CHEST, ' + value_colour + ')\\n';"},
{"name": "robot_change_eye","definition":"{\"type\":\"robot_change_eye\",\"message0\":\"Change %1 eye(s) to %2\",\"args0\":[{\"type\":\"field_dropdown\",\"name\":\"EYE\",\"options\":[[\"Both\",\"BOTH_EYES\"],[\"Left\",\"LEFT_EYE\"],[\"Right\",\"RIGHT_EYE\"]]},{\"type\":\"input_value\",\"name\":\"COLOUR\"}],\"inputsInline\":true,\"previousStatement\":null,\"nextStatement\":null,\"colour\":65,\"tooltip\":\"Changes the colour of the robot's eyes.\"}","generator":"var value_eye = block.getFieldValue('EYE'),value_colour = Blockly.NaoLang.valueToCode(block, 'COLOUR', Blockly.NaoLang.ORDER_ATOMIC),code = 'changeLEDColour(' + value_eye + ', ' + value_colour + ')\\n';return Blockly.NaoLang.generatePrefix() + code;"},
{"name": "robot_change_led","definition":"{\"type\":\"robot_change_led\",\"message0\":\"Change %1 LED to %2\",\"args0\":[{\"type\":\"field_dropdown\",\"name\":\"LED\",\"options\":[[\"Both\",\"BOTH\"],[\"Left\",\"LEFT\"],[\"Right\",\"RIGHT\"]]},{\"type\":\"input_value\",\"name\":\"COLOUR\"}],\"inputsInline\":true,\"previousStatement\":null,\"nextStatement\":null,\"colour\":65,\"tooltip\":\"Changes the colour of the robot's LEDs.\"}","generator":"var value_led = block.getFieldValue('LED'),value_colour = Blockly.NaoLang.valueToCode(block, 'COLOUR', Blockly.NaoLang.ORDER_ATOMIC),code = 'changeLEDColour(' + value_led + ', ' + value_colour + ')\\n';return Blockly.NaoLang.generatePrefix() + code;"},
{"name": "robot_dance","definition":"{\"type\":\"robot_dance\",\"message0\":\"Dance\",\"nextStatement\":null,\"previousStatement\":null,\"colour\":65,\"tooltip\":\"Performs the gangnam dance.\"}","generator":"var code = 'dance(\\'gangnam\\', TRUE)\\n';return Blockly.NaoLang.generatePrefix() + code;"},
{"name": "robot_gangnam","definition":"{\"type\":\"robot_gangnam\",\"message0\":\"Gangnam (music %1)\",\"args0\":[{\"type\":\"field_dropdown\",\"name\":\"MUSIC\",\"options\":[[\"on\",\"TRUE\"],[\"off\",\"FALSE\"]]}],\"inputsInline\":true,\"nextStatement\":null,\"previousStatement\":null,\"colour\":65,\"tooltip\":\"Performs the gangnam dance.\"}","generator":"var music = block.getFieldValue('MUSIC'),code = 'dance(\\'gangnam\\', ' + music + ')\\n';return Blockly.NaoLang.generatePrefix() + code;"},
{"name": "robot_hand","definition":"{\"type\":\"robot_hand\",\"message0\":\"%1 %2 hand(s)\",\"args0\":[{\"type\":\"field_dropdown\",\"name\":\"ACTION\",\"options\":[[\"Open\",\"open\"],[\"Close\",\"close\"]]},{\"type\":\"field_dropdown\",\"name\":\"HAND\",\"options\":[[\"Left\",\"LEFT\"],[\"Right\",\"RIGHT\"],[\"Both\",\"BOTH\"]]}],\"inputsInline\":true,\"previousStatement\":null,\"nextStatement\":null,\"colour\":65,\"tooltip\":\"Changes the colour of the robot's eyes.\"}","generator":"var value_action = block.getFieldValue('ACTION'),value_hand = block.getFieldValue('HAND'),code = 'changeHand(\\'' + value_action.toLowerCase() + '\\',\\'' + value_hand.toLowerCase() + '\\')\\n';return Blockly.NaoLang.generatePrefix() + code;"},
{"name": "robot_kia_ora","definition":"{\"type\":\"robot_kia_ora\",\"message0\":\"Say 'Kia ora'\",\"nextStatement\":null,\"previousStatement\":null,\"colour\":65,\"tooltip\":\"Say kia ora.\"}","generator":"var code = 'say(\\'key or a\\')\\n';return Blockly.NaoLang.generatePrefix() + code;"},
{"name": "robot_look","definition":"{\"type\":\"robot_look\",\"message0\":\"Look %1\",\"args0\":[{\"type\":\"field_dropdown\",\"name\":\"DIR\",\"options\":[[\"left\",\"LEFT\"],[\"ahead\",\"AHEAD\"],[\"right\",\"RIGHT\"]]}],\"inputsInline\":true,\"nextStatement\":null,\"previousStatement\":null,\"colour\":65,\"tooltip\":\"Moves the robot's head to look in the direction.\"}","generator":"var dir = block.getFieldValue('DIR').toLowerCase(),code = 'look(\\'' + dir + '\\')\\n';return Blockly.NaoLang.generatePrefix() + code;"},
{"name": "robot_macaranna","definition":"{\"type\":\"robot_macaranna\",\"message0\":\"Macaranna (music %1)\",\"args0\":[{\"type\":\"field_dropdown\",\"name\":\"MUSIC\",\"options\":[[\"on\",\"TRUE\"],[\"off\",\"FALSE\"]]}],\"inputsInline\":true,\"nextStatement\":null,\"previousStatement\":null,\"colour\":65,\"tooltip\":\"Performs the macaranna dance.\"}","generator":"var music = block.getFieldValue('MUSIC'),code = 'dance(\\'macaranna\\', ' + music + ')\\n';return Blockly.NaoLang.generatePrefix() + code;"},
{"name": "robot_move","definition":"{\"type\":\"robot_move\",\"message0\":\"Move forward %1s seconds\",\"args0\":[{\"type\":\"input_value\",\"check\":\"Number\",\"name\":\"SECONDS\"}],\"inputsInline\":true,\"nextStatement\":null,\"previousStatement\":null,\"colour\":65,\"tooltip\":\"Moves forward for the duration.\"}","generator":"var seconds = Blockly.NaoLang.valueToCode(block, 'SECONDS', Blockly.NaoLang.ORDER_ATOMIC),code = 'moveForward(' + seconds + ')\\n';return Blockly.NaoLang.generatePrefix() + code;"},
{"name": "robot_move_direction","definition":"{\"type\":\"robot_move_direction\",\"message0\":\"Move %1 for %2 seconds\",\"args0\":[{\"type\":\"field_dropdown\",\"name\":\"DIR\",\"options\":[[\"Forward\",\"FORWARD\"],[\"Backwards\",\"BACK\"]]},{\"type\":\"input_value\",\"check\":\"Number\",\"name\":\"SECONDS\"}],\"inputsInline\":true,\"previousStatement\":null,\"nextStatement\":null,\"colour\":65,\"tooltip\":\"Moves the robot in a direction for a specified time\"}","generator":"var value_dir = block.getFieldValue('DIR'),value_time = Blockly.NaoLang.valueToCode(block, 'SECONDS', Blockly.NaoLang.ORDER_ATOMIC),code = 'moveDirection(' + value_dir + ',' + value_time + ')\\n';return Blockly.NaoLang.generatePrefix() + code;"},
{"name": "robot_on_button","definition":"{\"type\":\"robot_on_button\",\"message0\":\"When %1 pressed\",\"args0\":[{\"type\":\"field_dropdown\",\"name\":\"BUTTON\",\"options\":[[\"Front Head\",\"front\"],[\"Middle Head\",\"middle\"],[\"Read Head\",\"rear\"],[\"Chest\",\"chest\"]]}],\"message1\":\"Do %1\",\"args1\":[{\"type\":\"input_statement\",\"name\":\"ACTION\"}],\"inputsInline\":true,\"colour\":290,\"tooltip\":\"Starts the block when a button is touched.\"}","generator":"var button = block.getFieldValue('BUTTON'),innerCode = Blockly.NaoLang.statementToCode(block, 'ACTION'),code = button + 'Button{\\n' +innerCode +'}\\n';return code;"},
{"name": "robot_on_start","definition":"{\"type\":\"robot_on_start\",\"message0\":\"On start\",\"message1\":\"do %1\",\"args1\":[{\"type\":\"input_statement\",\"name\":\"ACTION\"}],\"colour\":290,\"tooltip\":\"Starts the block when the script is downloaded.\",\"helpUrl\":\"\"}","generator":"var innerCode = Blockly.NaoLang.statementToCode(block, 'ACTION'),code = 'start{\\n' +innerCode +'}\\n';return code;"},
{"name": "robot_play_audio","definition":"{\"type\":\"robot_play_audio\",\"message0\":\"Play audio %1\",\"args0\":[{\"type\":\"field_dropdown\",\"name\":\"AUDIO\",\"options\":[[\"Last Recorded\",\"record\"]]}],\"nextStatement\":null,\"previousStatement\":null,\"colour\":65,\"tooltip\":\"Puts the robot in a safe resting position.\"}","generator":"var audio = block.getFieldValue('AUDIO'),code = 'audio(\\'' + audio + '\\')\\n';return Blockly.NaoLang.generatePrefix() + code;"},
{"name": "robot_point","definition":"{\"type\":\"robot_point\",\"message0\":\"Point %1 arm %2\",\"args0\":[{\"type\":\"field_dropdown\",\"name\":\"ARM\",\"options\":[[\"left\",\"LEFT\"],[\"right\",\"RIGHT\"]]},{\"type\":\"field_dropdown\",\"name\":\"DIR\",\"options\":[[\"out\",\"OUT\"],[\"ahead\",\"AHEAD\"],[\"down\",\"DOWN\"],[\"up\",\"UP\"]]}],\"inputsInline\":true,\"nextStatement\":null,\"previousStatement\":null,\"colour\":65,\"tooltip\":\"Moves one of the robot's arms to point in the direction.\"}","generator":"var dir = block.getFieldValue('DIR').toLowerCase(),arm = block.getFieldValue('ARM').toLowerCase(),code = 'point(\\'' + arm + '\\',\\'' + dir + '\\')\\n';return Blockly.NaoLang.generatePrefix() + code;"},
{"name": "robot_point_left","definition":"{\"type\":\"robot_point_left\",\"message0\":\"Point left\",\"nextStatement\":null,\"previousStatement\":null,\"colour\":65,\"tooltip\":\"Points the robot's left arm.\"}","generator":"var code = 'point(\\'left\\',\\'out\\')\\n';return Blockly.NaoLang.generatePrefix() + code;"},
{"name": "robot_point_right","definition":"{\"type\":\"robot_point_right\",\"message0\":\"Point right\",\"nextStatement\":null,\"previousStatement\":null,\"colour\":65,\"tooltip\":\"Points the robot's right arm.\"}","generator":"var code = 'point(\\'right\\',\\'out\\')\\n';return Blockly.NaoLang.generatePrefix() + code;"},
{"name": "robot_posture","definition":"{\"type\":\"robot_posture\",\"message0\":\"Move to %1\",\"args0\":[{\"type\":\"field_dropdown\",\"name\":\"POSTURE\",\"options\":[[\"Stand\",\"Stand\"],[\"Sit Forward\",\"Sit\"],[\"Sit Back\",\"SitRelax\"],[\"Crouch\",\"Crouch\"],[\"Lie on Front\",\"LyingBelly\"],[\"Lie on Back\",\"LyingBack\"]]}],\"inputsInline\":true,\"nextStatement\":null,\"previousStatement\":null,\"colour\":65,\"tooltip\":\"Moves to the specified position.\"}","generator":"var posture = block.getFieldValue('POSTURE'),code = 'position(\\'' + posture + '\\')\\n';return Blockly.NaoLang.generatePrefix() + code;"},
{"name": "robot_posture_and_say","definition":"{\"type\":\"robot_posture_and_say\",\"message0\":\"Move to %1 and say %2\",\"args0\":[{\"type\":\"field_dropdown\",\"name\":\"POSTURE\",\"options\":[[\"Stand\",\"Stand\"],[\"Sit Forward\",\"Sit\"],[\"Sit Back\",\"SitRelax\"],[\"Crouch\",\"Crouch\"],[\"Lie on Front\",\"LyingBelly\"],[\"Lie on Back\",\"LyingBack\"]]},{\"type\":\"input_value\",\"name\":\"TEXT\"}],\"inputsInline\":true,\"nextStatement\":null,\"previousStatement\":null,\"colour\":65,\"tooltip\":\"Moves to the specified position.\"}","generator":"var posture = block.getFieldValue('POSTURE'),textToSpeak = Blockly.NaoLang.valueToCode(block, 'TEXT', Blockly.NaoLang.ORDER_ATOMIC),code = 'position(\\'' + posture + '\\', ' + textToSpeak + ')\\n';return Blockly.NaoLang.generatePrefix() + code;"},
{"name": "robot_posture_Crouch","definition":"{\"type\":\"robot_posture_Crouch\",\"message0\":\"Crouch\",\"inputsInline\":true,\"nextStatement\":null,\"previousStatement\":null,\"colour\":65,\"tooltip\":\"Moves to the Crouch position.\"}","generator":"var code = 'position(\\'Crouch\\')\\n';return code;"},
{"name": "robot_posture_LyingBack","definition":"{\"type\":\"robot_posture_LyingBack\",\"message0\":\"Lie on Back\",\"inputsInline\":true,\"nextStatement\":null,\"previousStatement\":null,\"colour\":65,\"tooltip\":\"Moves to the Lie on Back position.\"}","generator":"var code = 'position(\\'LyingBack\\')\\n';return code;"},
{"name": "robot_posture_LyingBelly","definition":"{\"type\":\"robot_posture_LyingBelly\",\"message0\":\"Lie on Front\",\"inputsInline\":true,\"nextStatement\":null,\"previousStatement\":null,\"colour\":65,\"tooltip\":\"Moves to the Lie on Front position.\"}","generator":"var code = 'position(\\'LyingBelly\\')\\n';return code;"},
{"name": "robot_posture_Sit","definition":"{\"type\":\"robot_posture_Sit\",\"message0\":\"Sit Forward\",\"inputsInline\":true,\"nextStatement\":null,\"previousStatement\":null,\"colour\":65,\"tooltip\":\"Moves to the Sit Forward position.\"}","generator":"var code = 'position(\\'Sit\\')\\n';return code;"},
{"name": "robot_posture_SitRelax","definition":"{\"type\":\"robot_posture_SitRelax\",\"message0\":\"Sit Back\",\"inputsInline\":true,\"nextStatement\":null,\"previousStatement\":null,\"colour\":65,\"tooltip\":\"Moves to the Sit Back position.\"}","generator":"var code = 'position(\\'SitRelax\\')\\n';return code;"},
{"name": "robot_posture_Stand","definition":"{\"type\":\"robot_posture_Stand\",\"message0\":\"Stand\",\"inputsInline\":true,\"nextStatement\":null,\"previousStatement\":null,\"colour\":65,\"tooltip\":\"Moves to the Stand position.\"}","generator":"var code = 'position(\\'Stand\\')\\n';return code;"},
{"name": "robot_record_audio","definition":"{\"type\":\"robot_record_audio\",\"message0\":\"Record audio for %1s\",\"args0\":[{\"type\":\"input_value\",\"check\":\"Number\",\"name\":\"TIME\"}],\"nextStatement\":null,\"previousStatement\":null,\"colour\":65,\"tooltip\":\"Records some audio.\"}","generator":"var time = Blockly.NaoLang.valueToCode(block, 'TIME', Blockly.NaoLang.ORDER_ATOMIC);var code = 'record(\\'record\\'' + time + ')\\n';return Blockly.NaoLang.generatePrefix() + code;"},
{"name": "robot_rest","definition":"{\"type\":\"robot_rest\",\"message0\":\"Rest\",\"nextStatement\":null,\"previousStatement\":null,\"colour\":65,\"tooltip\":\"Puts the robot in a safe resting position.\"}","generator":"var code = 'rest()\\n';return Blockly.NaoLang.generatePrefix() + code;"},
{"name": "robot_say","definition":"{\"type\":\"robot_say\",\"message0\":\"Say %1\",\"args0\":[{\"type\":\"input_value\",\"name\":\"TEXT\"}],\"inputsInline\":true,\"nextStatement\":null,\"previousStatement\":null,\"colour\":65,\"tooltip\":\"Speak the specified text.\"}","generator":"var textToSpeak = Blockly.NaoLang.valueToCode(block, 'TEXT', Blockly.NaoLang.ORDER_ATOMIC);var code = 'say(' + textToSpeak + ')\\n';return Blockly.NaoLang.generatePrefix() + code;"},
{"name": "robot_sensor_battery","definition":"{\"type\":\"robot_sensor_battery\",\"message0\":\"Battery charge\",\"output\":null,\"colour\":85,\"tooltip\":\"Retrieves the current charge level of the battery\"}","generator":"var code = 'readSensor(BATTERY)';return [code, Blockly.NaoLang.ORDER_ATOMIC];"},
{"name": "robot_sensor_gyroscope","definition":"{\"type\":\"robot_sensor_gyroscope\",\"message0\":\"%1 gyroscope\",\"args0\":[{\"type\":\"field_dropdown\",\"name\":\"SENSOR\",\"options\":[[\"x\",\"X\"],[\"y\",\"Y\"],[\"z\",\"Z\"]]}],\"output\":null,\"colour\":85,\"tooltip\":\"Retrieves the value of the gyroscope in an axis\"}","generator":"var code = 'readSensor(GYROSCOPE_' + Blockly.NaoLang.variableDB_.getName(block.getFieldValue('SENSOR'), Blockly.Variables.NAME_TYPE) + ')';return [code, Blockly.NaoLang.ORDER_ATOMIC];"},
{"name": "robot_sensor_head","definition":"{\"type\":\"robot_sensor_head\",\"message0\":\"%1 head touched\",\"args0\":[{\"type\":\"field_dropdown\",\"name\":\"SENSOR\",\"options\":[[\"Front\",\"FRONT\"],[\"Middle\",\"MIDDLE\"],[\"Rear\",\"REAR\"]]}],\"output\":null,\"colour\":85,\"tooltip\":\"Retrieves whether a head sensor is touched\"}","generator":"var code = 'readSensor(HEAD_' + Blockly.NaoLang.variableDB_.getName(block.getFieldValue('SENSOR'), Blockly.Variables.NAME_TYPE) + ')';return [code, Blockly.NaoLang.ORDER_ATOMIC];"},
{"name": "robot_sensor_sonar","definition":"{\"type\":\"robot_sensor_sonar\",\"message0\":\"Distance to %1 front\",\"args0\":[{\"type\":\"field_dropdown\",\"name\":\"SENSOR\",\"options\":[[\"Left\",\"LEFT\"],[\"Right\",\"RIGHT\"]]}],\"output\":null,\"colour\":85,\"tooltip\":\"Retrieves the distance to the front of the root on a side\"}","generator":"var code = 'readSensor(SONAR_' + Blockly.NaoLang.variableDB_.getName(block.getFieldValue('SENSOR'), Blockly.Variables.NAME_TYPE) + ')';return [code, Blockly.NaoLang.ORDER_ATOMIC];"},
{"name": "robot_taichi","definition":"{\"type\":\"robot_taichi\",\"message0\":\"Tai chi (music %1)\",\"args0\":[{\"type\":\"field_dropdown\",\"name\":\"MUSIC\",\"options\":[[\"on\",\"TRUE\"],[\"off\",\"FALSE\"]]}],\"inputsInline\":true,\"nextStatement\":null,\"previousStatement\":null,\"colour\":65,\"tooltip\":\"Performs a tai chi dance.\"}","generator":"var music = block.getFieldValue('MUSIC'),code = 'dance(\\'taichi\\', ' + music + ')\\n';return Blockly.NaoLang.generatePrefix() + code;"},
{"name": "robot_turn","definition":"{\"type\":\"robot_turn\",\"message0\":\"Turn %1 for %2 seconds\",\"args0\":[{\"type\":\"field_dropdown\",\"name\":\"DIR\",\"options\":[[\"left\",\"LEFT\"],[\"right\",\"RIGHT\"]]},{\"type\":\"input_value\",\"check\":\"Number\",\"name\":\"SECONDS\"}],\"inputsInline\":true,\"nextStatement\":null,\"previousStatement\":null,\"colour\":65,\"tooltip\":\"Turns for the duration.\"}","generator":"var seconds = Blockly.NaoLang.valueToCode(block, 'SECONDS', Blockly.NaoLang.ORDER_ATOMIC),value_dir = block.getFieldValue('DIR'),code = 'turn(' + value_dir + ',' + seconds + ')\\n';return Blockly.NaoLang.generatePrefix() + code;"},
{"name": "robot_turn_direction","definition":"{\"type\":\"robot_turn_direction\",\"message0\":\"Turn %1 for %2 seconds\",\"args0\":[{\"type\":\"field_dropdown\",\"name\":\"DIR\",\"options\":[[\"Left\",\"LEFT\"],[\"Right\",\"RIGHT\"]]},{\"type\":\"input_value\",\"check\":\"Number\",\"name\":\"SECONDS\"}],\"inputsInline\":true,\"previousStatement\":null,\"nextStatement\":null,\"colour\":65,\"tooltip\":\"Turns the robot in a direction for a specified time\"}","generator":"var value_dir = block.getFieldValue('DIR'),value_time = Blockly.NaoLang.valueToCode(block, 'SECONDS', Blockly.NaoLang.ORDER_ATOMIC),code = 'turnDirection(' + value_dir + ',' + value_time + ')\\n';return Blockly.NaoLang.generatePrefix() + code;"},
{"name": "robot_wait","definition":"{\"type\":\"robot_wait\",\"message0\":\"Wait for %1s\",\"args0\":[{\"type\":\"input_value\",\"check\":\"Number\",\"name\":\"TIME\"}],\"nextStatement\":null,\"previousStatement\":null,\"colour\":65,\"tooltip\":\"Puts the robot in a safe resting position.\"}","generator":"var time = Blockly.NaoLang.valueToCode(block, 'TIME', Blockly.NaoLang.ORDER_ATOMIC);var code = 'wait(' + time + ')\\n';return Blockly.NaoLang.generatePrefix() + code;"},
{"name": "robot_walk","definition":"{\"type\":\"robot_walk\",\"message0\":\"Walk forward %1s, sideways %2s\",\"args0\":[{\"type\":\"input_value\",\"check\":\"Number\",\"name\":\"X\"},{\"type\":\"input_value\",\"check\":\"Number\",\"name\":\"Y\"}],\"inputsInline\":true,\"nextStatement\":null,\"previousStatement\":null,\"colour\":65,\"tooltip\":\"Walks for the duration.\"}","generator":"var xPos = Blockly.NaoLang.valueToCode(block, 'X', Blockly.NaoLang.ORDER_ATOMIC),yPos = Blockly.NaoLang.valueToCode(block, 'Y', Blockly.NaoLang.ORDER_ATOMIC);var code = 'walk(' + xPos + ',' + yPos + ')\\n';return Blockly.NaoLang.generatePrefix() + code;"},
{"name": "text","definition":"SYSTEM","generator":"var code = '\\'' + block.getFieldValue('TEXT').replace(/'/g, '\\\\\\'') + '\\'';return [code, Blockly.NaoLang.ORDER_ATOMIC];"},
{"name": "text_concat","definition":"{\"type\":\"text_concat\",\"message0\":\"Append %1 to %2\",\"args0\":[{\"type\":\"input_value\",\"name\":\"TEXT\"},{\"type\":\"input_value\",\"name\":\"VAR\"}],\"inputsInline\":true,\"colour\":165,\"output\":null,\"tooltip\":\"Append text to a variable.\"}","generator":"var varName = Blockly.NaoLang.valueToCode(block, 'VAR', Blockly.NaoLang.ORDER_NONE) || '\\'\\'',value = Blockly.NaoLang.valueToCode(block, 'TEXT', Blockly.NaoLang.ORDER_NONE) || '\\'\\'',order = Blockly.NaoLang.ORDER_RELATIONAL;return ['append(' + varName + ',' + value + ')', order];"},
{"name": "text_length","definition":"SYSTEM","generator":"var text = Blockly.NaoLang.valueToCode(block, 'VALUE', Blockly.NaoLang.ORDER_NONE) || '\\'\\'';return ['len(' + text + ')', Blockly.NaoLang.ORDER_FUNCTION_CALL];"},
{"name": "variables_get","definition":"SYSTEM","generator":"var code = '@' + Blockly.NaoLang.nameDB_.getName(block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);return [code, Blockly.NaoLang.ORDER_ATOMIC];"},
{"name": "variables_set","definition":"SYSTEM","generator":"var argument0 = Blockly.NaoLang.valueToCode(block, 'VALUE', Blockly.NaoLang.ORDER_NONE) || '0',varName = Blockly.NaoLang.nameDB_.getName(block.getFieldValue('VAR'), Blockly.Variables.NAME_TYPE);return Blockly.NaoLang.generatePrefix() + 'variable(@' + varName + ', ' + argument0 + ')\\n';"},
  ],
  "nodes":[
    {"name":"append","converter": "new BlockDefinition('text_concat', [new ValueDefinition('VAR'), new ValueDefinition('TEXT')])"},
  ]
}

###
